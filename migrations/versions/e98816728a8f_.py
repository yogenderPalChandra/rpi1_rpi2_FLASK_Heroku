"""empty message

Revision ID: e98816728a8f
Revises: 
Create Date: 2020-12-03 11:41:14.756145

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e98816728a8f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sensors', sa.Column('Temp10d12', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp11d1', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp12d7', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp13d8', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp14d24', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp15d23', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp16d18', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp17d15', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp18d14', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp19d2', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp1d4', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp2d5', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp3d6', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp4d13', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp5d19', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp6d26', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp7d21', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp8d20', sa.Float(), nullable=True))
    op.add_column('sensors', sa.Column('Temp9d16', sa.Float(), nullable=True))
    op.drop_column('sensors', 'temp2d5')
    op.drop_column('sensors', 'temp10d12')
    op.drop_column('sensors', 'temp16d18')
    op.drop_column('sensors', 'temp1d4')
    op.drop_column('sensors', 'temp17d15')
    op.drop_column('sensors', 'temp11d1')
    op.drop_column('sensors', 'temp13d8')
    op.drop_column('sensors', 'temp12d7')
    op.drop_column('sensors', 'temp14d24')
    op.drop_column('sensors', 'temp3d6')
    op.drop_column('sensors', 'temp5d19')
    op.drop_column('sensors', 'temp18d14')
    op.drop_column('sensors', 'temp15d23')
    op.drop_column('sensors', 'temp7d21')
    op.drop_column('sensors', 'temp4d13')
    op.drop_column('sensors', 'temp8d20')
    op.drop_column('sensors', 'temp9d16')
    op.drop_column('sensors', 'temp6d26')
    op.drop_column('sensors', 'temp19d2')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sensors', sa.Column('temp19d2', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp6d26', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp9d16', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp8d20', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp4d13', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp7d21', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp15d23', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp18d14', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp5d19', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp3d6', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp14d24', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp12d7', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp13d8', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp11d1', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp17d15', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp1d4', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp16d18', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp10d12', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensors', sa.Column('temp2d5', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_column('sensors', 'Temp9d16')
    op.drop_column('sensors', 'Temp8d20')
    op.drop_column('sensors', 'Temp7d21')
    op.drop_column('sensors', 'Temp6d26')
    op.drop_column('sensors', 'Temp5d19')
    op.drop_column('sensors', 'Temp4d13')
    op.drop_column('sensors', 'Temp3d6')
    op.drop_column('sensors', 'Temp2d5')
    op.drop_column('sensors', 'Temp1d4')
    op.drop_column('sensors', 'Temp19d2')
    op.drop_column('sensors', 'Temp18d14')
    op.drop_column('sensors', 'Temp17d15')
    op.drop_column('sensors', 'Temp16d18')
    op.drop_column('sensors', 'Temp15d23')
    op.drop_column('sensors', 'Temp14d24')
    op.drop_column('sensors', 'Temp13d8')
    op.drop_column('sensors', 'Temp12d7')
    op.drop_column('sensors', 'Temp11d1')
    op.drop_column('sensors', 'Temp10d12')
    # ### end Alembic commands ###
